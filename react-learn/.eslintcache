[{"D:\\github\\my\\f-test\\react-learn\\src\\index.tsx":"1","D:\\github\\my\\f-test\\react-learn\\src\\reportWebVitals.ts":"2","D:\\github\\my\\f-test\\react-learn\\src\\App.tsx":"3","D:\\github\\my\\f-test\\react-learn\\src\\components\\NoMatch.tsx":"4","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestRedux\\index.tsx":"5","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\index.tsx":"6","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\index.tsx":"7","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\context.ts":"8","D:\\github\\my\\f-test\\react-learn\\src\\utils\\math.ts":"9","D:\\github\\my\\f-test\\react-learn\\src\\components\\ErrorBoundary.tsx":"10","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\ClassComponent.tsx":"11","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\FuncComponent.tsx":"12","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\EventTest.tsx":"13","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\ClassComponent3.tsx":"14","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\Modal.tsx":"15","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\HighOrderComponent.tsx":"16","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\RefTest.tsx":"17","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\TestRef.tsx":"18","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\NumberCom.tsx":"19","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\PureComponentTest.tsx":"20","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\RenderPropsTest.tsx":"21","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\OtherComponent.tsx":"22","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\TextInput.tsx":"23","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ToolBar.tsx":"24","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\UncontrolledCompTest.tsx":"25","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\createPropsGetter.ts":"26","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ThemedButton2.tsx":"27","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ThemedButton.tsx":"28","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\Button.tsx":"29","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestBullets\\index.tsx":"30","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestList\\index.tsx":"31","D:\\github\\my\\f-test\\react-learn\\src\\components\\List.tsx":"32","D:\\github\\my\\f-test\\react-learn\\src\\pages\\Index.tsx":"33","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestList2\\index.tsx":"34","D:\\github\\my\\f-test\\react-learn\\src\\components\\List2.tsx":"35","D:\\github\\my\\f-test\\react-learn\\src\\lib\\MyRedux.ts":"36","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestSetState\\index.js":"37","D:\\github\\my\\f-test\\react-learn\\src\\pages\\LifeCycleTest\\index.js":"38","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestHooks\\index.js":"39","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestEvents\\index.js":"40"},{"size":489,"mtime":1609172447206,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":499162500000,"results":"43","hashOfConfig":"42"},{"size":1849,"mtime":1617808253914,"results":"44","hashOfConfig":"42"},{"size":111,"mtime":1609173309887,"results":"45","hashOfConfig":"42"},{"size":207,"mtime":1609561850737,"results":"46","hashOfConfig":"42"},{"size":3582,"mtime":1616593305179,"results":"47","hashOfConfig":"42"},{"size":3867,"mtime":1609484718451,"results":"48","hashOfConfig":"42"},{"size":628,"mtime":1609177139778,"results":"49","hashOfConfig":"42"},{"size":75,"mtime":1609167416685,"results":"50","hashOfConfig":"42"},{"size":775,"mtime":1609249248423,"results":"51","hashOfConfig":"42"},{"size":1222,"mtime":1609504256848,"results":"52","hashOfConfig":"42"},{"size":827,"mtime":1609502859824,"results":"53","hashOfConfig":"42"},{"size":839,"mtime":1609509406433,"results":"54","hashOfConfig":"42"},{"size":1051,"mtime":1609507107979,"results":"55","hashOfConfig":"42"},{"size":605,"mtime":1609474024217,"results":"56","hashOfConfig":"42"},{"size":473,"mtime":1609493050251,"results":"57","hashOfConfig":"42"},{"size":1072,"mtime":1609507608471,"results":"58","hashOfConfig":"42"},{"size":1002,"mtime":1609478862981,"results":"59","hashOfConfig":"42"},{"size":295,"mtime":1609259947199,"results":"60","hashOfConfig":"42"},{"size":1554,"mtime":1609262856670,"results":"61","hashOfConfig":"42"},{"size":1705,"mtime":1609480807891,"results":"62","hashOfConfig":"42"},{"size":236,"mtime":1609173915015,"results":"63","hashOfConfig":"42"},{"size":476,"mtime":1609254856161,"results":"64","hashOfConfig":"42"},{"size":291,"mtime":1609254555656,"results":"65","hashOfConfig":"42"},{"size":644,"mtime":1609484870053,"results":"66","hashOfConfig":"42"},{"size":314,"mtime":1609507061059,"results":"67","hashOfConfig":"42"},{"size":800,"mtime":1609177261661,"results":"68","hashOfConfig":"42"},{"size":926,"mtime":1609176557602,"results":"69","hashOfConfig":"42"},{"size":381,"mtime":1609473779874,"results":"70","hashOfConfig":"42"},{"size":2098,"mtime":1614727772191,"results":"71","hashOfConfig":"42"},{"size":700,"mtime":1615097430235,"results":"72","hashOfConfig":"42"},{"size":3003,"mtime":1615097335300,"results":"73","hashOfConfig":"42"},{"size":1032,"mtime":1617808229137,"results":"74","hashOfConfig":"42"},{"size":932,"mtime":1615112460013,"results":"75","hashOfConfig":"42"},{"size":4158,"mtime":1615113089608,"results":"76","hashOfConfig":"42"},{"size":1385,"mtime":1615391391394,"results":"77","hashOfConfig":"42"},{"size":1774,"mtime":1617468118078,"results":"78","hashOfConfig":"42"},{"size":3016,"mtime":1617458005438,"results":"79","hashOfConfig":"42"},{"size":378,"mtime":1617464477166,"results":"80","hashOfConfig":"42"},{"size":767,"mtime":1617809804878,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"13gmpi1",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\github\\my\\f-test\\react-learn\\src\\index.tsx",[],["172","173"],"D:\\github\\my\\f-test\\react-learn\\src\\reportWebVitals.ts",[],"D:\\github\\my\\f-test\\react-learn\\src\\App.tsx",["174"],"import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport NoMatch from './components/NoMatch';\nimport './App.css'\n\nconst TestAdvacedGuides = lazy(() => import('./pages/TestAdvacedGuides'));\n\nconst Index = lazy(() => import('./pages/Index'));\nconst UseTS = lazy(() => import('./pages/UseTs'));\n\nconst TestRedux = lazy(() => import('./pages/TestRedux'));\n\nconst TestBullets = lazy(() => import('./pages/TestBullets'));\nconst TestList = lazy(() => import('./pages/TestList'));\nconst TestList2 = lazy(() => import('./pages/TestList2'));\nconst TestSetState = lazy(() => import('./pages/TestSetState'));\nconst LifeCycleTest = lazy(() => import('./pages/LifeCycleTest'));\nconst TestHooks = lazy(() => import('./pages/TestHooks'));\nconst TestEvents = lazy(() => import('./pages/TestEvents'));\n\n\nfunction App() {\n\n  return (\n    <React.Fragment>\n      <Router>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route exact path=\"/\" component={Index} />\n            <Route path=\"/TestAdvacedGuides\" component={TestAdvacedGuides} />\n            <Route path=\"/TestRedux\" component={TestRedux} />\n            <Route path=\"/UseTS\" component={UseTS} />\n            <Route path=\"/TestBullets\" component={TestBullets} />\n            <Route path=\"/TestList\" component={TestList} />\n            <Route path=\"/TestList2\" component={TestList2} />\n            <Route path=\"/TestSetState\" component={TestSetState} />\n            <Route path=\"/LifeCycleTest\" component={LifeCycleTest} />\n            <Route path=\"/TestHooks\" component={TestHooks} />\n            <Route path=\"/TestEvents\" component={TestEvents} />\n            <Route component={NoMatch} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","D:\\github\\my\\f-test\\react-learn\\src\\components\\NoMatch.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestRedux\\index.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\index.tsx",["175","176","177"],"import React from 'react'\r\nimport ClassComponent from './components/ClassComponent'\r\nimport ClassComponent3 from './components/ClassComponent3';\r\nimport EventTest from './components/EventTest';\r\nimport FuncComponent from './components/FuncComponent'\r\nimport LoadingHOC from './components/HighOrderComponent'\r\nimport RefTest from './components/RefTest';\r\nimport { Action, createStore, Reducer } from '../../lib/MyRedux';\r\nimport axios from 'axios';\r\n\r\nclass A extends React.Component {\r\n    constructor(props: {} | Readonly<{}>) {\r\n        super(props)\r\n        console.log('A constructor');\r\n    }\r\n    \r\n    componentDidMount () {\r\n        console.log('A componentDidMount');\r\n    }\r\n\r\n    shouldComponentUpdate () {\r\n        console.log('A shouldComponentUpdate');\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('A componentDidUpdate');\r\n    }\r\n    render () {\r\n        console.log('A render');\r\n        return (\r\n            <B />\r\n        )\r\n    }\r\n}\r\n\r\nclass B extends React.Component {\r\n    constructor(props: {} | Readonly<{}>) {\r\n        super(props)\r\n        console.log('B constructor');\r\n    }\r\n    \r\n    componentDidMount () {\r\n        console.log('B componentDidMount');\r\n    }\r\n\r\n    shouldComponentUpdate () {\r\n        console.log('B shouldComponentUpdate');\r\n        return true;\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        console.log('B componentDidUpdate');\r\n    }\r\n    render () {\r\n        console.log('B render');\r\n        return (\r\n            <div>B</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class UseTs extends React.Component {\r\n\r\n    Hoc = LoadingHOC(ClassComponent);\r\n\r\n    componentDidMount() {\r\n        // interface State {\r\n        //     name: string;\r\n        //     age: number;\r\n        // }\r\n\r\n        // const reducer: Reducer<State> = (state: State, action) => {\r\n        //     switch (action.type) {\r\n        //         case 'setAge':\r\n        //             return { ...state, age: action.age }\r\n        //         default:\r\n        //             return state;\r\n        //     }\r\n        // }\r\n\r\n        // console.log('3333')\r\n        // const store = createStore<State>(reducer, { name: 'hello', age: 11 });\r\n        // const {\r\n        //     subscribe,\r\n        //     dispatch,\r\n        //     getState,\r\n        // } = store;\r\n        // subscribe(() => {\r\n        //     console.log(getState());\r\n        // })\r\n        // setTimeout(() => {\r\n        //     dispatch({ type: 'setAge', age: 14 })\r\n        // }, 10000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div onClick={() => {\r\n                   axios.interceptors.request.use(function (config) {\r\n                    // Do something before request is sent\r\n                    console.log('----------1', config)\r\n                    return config;\r\n                  }, function (error) {\r\n                    // Do something with request error\r\n                    return Promise.reject(error);\r\n                  });\r\n                  debugger;\r\n                    axios.get('/index.html')\r\n                    .then(res=> {\r\n                        console.log(res.data);\r\n                    })\r\n                }}>发送请求1</div>\r\n                <A />\r\n                <ClassComponent name=\"hello\" />\r\n                <FuncComponent name=\"world\" initialValue={100} />\r\n                <this.Hoc name=\"hello\" loading={true} />\r\n                <ClassComponent3 name=\"333\" initialValue={3} />\r\n                <RefTest />\r\n                <EventTest />\r\n            </>\r\n        )\r\n    }\r\n}","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\index.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\context.ts",[],"D:\\github\\my\\f-test\\react-learn\\src\\utils\\math.ts",[],"D:\\github\\my\\f-test\\react-learn\\src\\components\\ErrorBoundary.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\ClassComponent.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\FuncComponent.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\EventTest.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\ClassComponent3.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\Modal.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\HighOrderComponent.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\RefTest.tsx",["178","179"],"import React, {useEffect, useRef } from 'react'\r\nimport ClassComponent3 from './ClassComponent3';\r\n\r\nconst RefTest: React.FC = () => {\r\n  const inputRef: React.RefObject<HTMLInputElement> = React.createRef();\r\n  const divRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n  // 这里有坑：useRef返回的类型是MutableRefObject<T | undefined>\r\n  // 而组件ref期望的是RefCallback<T> | RefObject<T> | null | string\r\n  const div2Ref = useRef<React.RefObject<HTMLDivElement>>();\r\n  const componentRef: React.RefObject<ClassComponent3> = React.createRef();\r\n\r\n  let textAreaRef: HTMLTextAreaElement | null;\r\n  useEffect(() => {\r\n    console.log(inputRef)\r\n    console.log(divRef);\r\n    console.log(textAreaRef);\r\n  }, []);\r\n  return (\r\n    <div ref={divRef}>\r\n      {/* 下面这行会报错 */}\r\n      {/* <div ref={div2Ref}>a</div> */}\r\n      <input ref={inputRef} />\r\n      <ClassComponent3 name=\"hello\" ref={componentRef} />\r\n      <textarea ref={(ref) => {\r\n        textAreaRef = ref;\r\n      }}></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RefTest;","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\TestRef.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\NumberCom.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\PureComponentTest.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\RenderPropsTest.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\OtherComponent.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\TextInput.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ToolBar.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\UncontrolledCompTest.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\createPropsGetter.ts",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ThemedButton2.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ThemedButton.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\Button.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestBullets\\index.tsx",["180","181","182","183"],"// @ts-nocheck\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport BulletScreen, { StyledBullet } from 'rc-bullets';\r\n\r\n// @ts-ignore\r\nconst headUrl = 'https://zerosoul.github.io/rc-bullets/assets/img/heads/girl.jpg';\r\nexport default function Demo() {\r\n    // 弹幕屏幕\r\n    const [screen, setScreen] = useState(null);\r\n    // 弹幕内容\r\n    const [bullet, setBullet] = useState('');\r\n    useEffect(() => {\r\n        // 给页面中某个元素初始化弹幕屏幕，一般为一个大区块。此处的配置项全局生效\r\n        let s = new BulletScreen('.screen', {\r\n            duration: 5,\r\n            trackHeight: 60,\r\n            pauseOnHover: false,\r\n            delay: '100ms'\r\n        });\r\n        // or\r\n        // let s=new BulletScreen(document.querySelector('.screen));\r\n        setScreen(s);\r\n        generateBullet(s);\r\n    }, []);\r\n    const getRangeRandom = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n    const generateBullet = (s) => {\r\n        s.push(<div>3333</div>)\r\n        setTimeout(() => {\r\n            generateBullet(s)\r\n        }, Math.floor(1000 * Math.random()) + 1000);\r\n    }\r\n    // 弹幕内容输入事件处理\r\n    const handleChange = ({ target: { value } }) => {\r\n        setBullet(value);\r\n    };\r\n    // 发送弹幕\r\n    const handleSend = () => {\r\n        if (bullet) {\r\n            // push 纯文本\r\n            // screen.push(bullet);\r\n            // or 使用 StyledBullet\r\n\r\n            screen.push(\r\n                <div>\r\n                    {bullet}\r\n                </div>\r\n            );\r\n            // or 还可以这样使用，效果等同使用 StyledBullet 组件\r\n            // screen.push({ msg: bullet, head: headUrl, color: \"#eee\" size=\"large\" backgroundColor: \"rgba(2,2,2,.3)\" })\r\n        }\r\n    };\r\n    return (\r\n        <main>\r\n            <div className=\"screen\" style={{ width: '100vw', height: '120px' }}></div>\r\n            <input value={bullet} onChange={handleChange} />\r\n            <button onClick={handleSend}>发送</button>\r\n        </main>\r\n    );\r\n}","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestList\\index.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\components\\List.tsx",["184"],"// @ts-nocheck\r\nimport React from 'react';\r\n\r\n\r\n// 应该接收的props: renderItem: Function<Promise>, getData:Function;  height:string; itemHeight: string\r\n\r\n// 下滑刷新组件\r\nclass InfiniteTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderItem = props.renderItem\r\n    this.getData = props.getData\r\n    this.state = {\r\n      loading: false,\r\n      page: 1,\r\n      showMsg: false,\r\n      List: [],\r\n      itemHeight: this.props.itemHeight || 0,\r\n      start: 0,\r\n      end: 0,\r\n      visibleCount: 0\r\n    }\r\n  }\r\n\r\n  onScroll() {\r\n    let { offsetHeight, scrollHeight, scrollTop } = this.refs.scrollWrapper;\r\n    let showOffset = scrollTop - (scrollTop % this.state.itemHeight)\r\n    const target = this.refs.scrollContent\r\n    target.style.WebkitTransform = `translate3d(0, ${showOffset}px, 0)`\r\n    this.setState({\r\n      start: Math.floor(scrollTop / this.state.itemHeight),\r\n      end: Math.floor(scrollTop / this.state.itemHeight + this.state.visibleCount + 1)\r\n    })\r\n    if (offsetHeight + scrollTop + 15 > scrollHeight) {\r\n      if (!this.state.showMsg) {\r\n        let page = this.state.page;\r\n        page++;\r\n        this.setState({\r\n          loading: true\r\n        })\r\n        this.getData(page).then(data => {\r\n          this.setState({\r\n            loading: false,\r\n            page: page,\r\n            List: data.concat(this.state.List),\r\n            showMsg: data && data.length > 0 ? false : true\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData(this.state.page).then(data => {\r\n      this.setState({\r\n        List: data\r\n      })\r\n      // 初始化列表以后，也需要初始化一些参数\r\n      requestAnimationFrame(() => {\r\n        let { offsetHeight } = this.refs.scrollWrapper;\r\n        let visibleCount = Math.ceil(offsetHeight / this.state.itemHeight)\r\n        let end = visibleCount + 1\r\n        this.setState({\r\n          end,\r\n          visibleCount\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { List, start, end, itemHeight } = this.state\r\n    const renderList = List.map((item, index) => {\r\n      if (index >= start && index <= end)\r\n        return (\r\n          this.renderItem(item, index)\r\n        )\r\n    });\r\n    return (\r\n      <div>\r\n        <div\r\n          ref=\"scrollWrapper\"\r\n          onScroll={this.onScroll.bind(this)}\r\n          style={{ height: this.props.height, overflow: 'scroll', position: 'relative' }}\r\n        >\r\n          <div style={{ height: `${renderList.length * itemHeight}px`, position: 'absolute', top: 0, right: 0, left: 0 }}>\r\n\r\n          </div>\r\n          <div ref=\"scrollContent\" style={{ position: 'relative', top: 0, right: 0, left: 0 }}>\r\n            {renderList}\r\n          </div>\r\n        </div>\r\n        {this.state.loading && (\r\n          <div>加载中</div>\r\n        )}\r\n        {this.state.showMsg && (\r\n          <div>暂无更多内容</div>\r\n        )}\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default InfiniteTwo;","D:\\github\\my\\f-test\\react-learn\\src\\pages\\Index.tsx",["185"],"// @ts-nocheck\r\nimport React, { useEffect } from 'react';\r\nimport {Link } from 'react-router-dom';\r\n\r\nconst Index = ({ history }) => {\r\n  console.log('history', history)\r\n  // useEffect(() => {\r\n  //   history.block((r) => {\r\n  //     console.log('aaa', r)\r\n  //     return 'Are you sure you want to leave this page?';\r\n  //   })\r\n  // }, [])\r\n  return (\r\n    <>\r\n      <Link to=\"/\">首页</Link><br />\r\n      <Link to=\"/TestAdvacedGuides\">测试高级指引</Link><br />\r\n      <Link to=\"/TestRedux\">测试使用redux</Link><br />\r\n      <Link to=\"/UseTS\">测试使用TS</Link><br />\r\n      <Link to=\"/TestBullets\">测试使用TestBullets</Link><br />\r\n      <Link to=\"/TestList\">测试使用TestList</Link><br />\r\n      <Link to=\"/TestList2\">TestList2</Link><br />\r\n      <Link to=\"/TestSetState\">TestSetState</Link><br />\r\n      <Link to=\"/LifeCycleTest\">LifeCycleTest</Link><br />\r\n      <Link to=\"/TestHooks\">TestHooks</Link><br />\r\n      <Link to=\"/TestEvents\">TestEvents</Link><br />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index;","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestList2\\index.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\components\\List2.tsx",["186"],"// @ts-nocheck\r\n\r\n// https://www.cnblogs.com/songbw/p/11662783.html\r\n// https://www.jianshu.com/p/39404c94dbd0\r\n\r\n\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\r\n\r\nconst List2 = ({\r\n  renderItem,\r\n  height,\r\n  itemHeight,\r\n  data,\r\n  distance = 15,\r\n  onReachEnd = () => { },\r\n  onRefresh = (close) => {\r\n    console.log('onRefresh')\r\n    setTimeout(() => {\r\n      close();\r\n    }, 2000);\r\n  }\r\n}) => {\r\n  let currentPos = 0;\r\n  const scrollWrapper = useRef(null);\r\n  const scrollContent = useRef(null);\r\n  const [visibleCount, setVisibleCount] = useState(0);\r\n  const [start, setStart] = useState(0)\r\n  const [end, setEnd] = useState(0)\r\n  const [startY, setStatY] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setStart(0)\r\n    setVisibleCount(Math.ceil(height / itemHeight))\r\n    setEnd(Math.ceil(height / itemHeight))\r\n  }, [height, itemHeight])\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(entries => {\r\n      entries.forEach((item, index) => {\r\n        if (item.intersectionRatio > 0.7) {\r\n          console.log(item.target.firstElementChild?.innerHTML);\r\n          observer.unobserve(item.target)\r\n        }\r\n      });\r\n      console.log('-----------------')\r\n\r\n    }, {\r\n      threshold: [0.7]  // 只要展现面积达到 70% 的元素 \r\n    });\r\n\r\n    document.querySelectorAll('.list-item')\r\n      .forEach((item) => {\r\n        observer.observe(item)\r\n      });\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    }\r\n  })\r\n\r\n  const onScroll = () => {\r\n    const { offsetHeight, scrollTop, scrollHeight } = scrollWrapper.current;\r\n    let showOffset = scrollTop - (scrollTop % itemHeight);\r\n    scrollContent.current.style.WebkitTransform = `translate3d(0, ${showOffset}px, 0)`\r\n    setStart(Math.floor(scrollTop / itemHeight));\r\n    setEnd(Math.floor(scrollTop / itemHeight) + visibleCount + 1);\r\n\r\n    if (offsetHeight + scrollTop + distance > scrollHeight) {\r\n      onReachEnd();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      overflow: 'scroll',\r\n      position: 'relative',\r\n      top: 0,\r\n      left: 0,\r\n      height: height + 'px',\r\n    }} ref={scrollWrapper} onScroll={onScroll}>\r\n\r\n      <div style={{ position: 'absolute', top: 0, left: 0, right: 0, height: data.length * itemHeight + 'px' }}></div>\r\n      <div\r\n        style={{\r\n          willChange: 'transform',\r\n        }}\r\n        ref={scrollContent}\r\n        onTouchStart={(e) => {\r\n          console.log('start')\r\n          const { scrollTop } = scrollWrapper.current\r\n          if (scrollTop === 0) {\r\n            setStatY(e.touches[0].pageY);\r\n            e.stopPropagation();\r\n          }\r\n        }}\r\n        onTouchMove={(e) => {\r\n          const pageY = e.touches[0].pageY;\r\n          const dis = pageY - startY;\r\n          currentPos = dis;\r\n          const { scrollTop } = scrollWrapper.current\r\n          if (dis < 0 || dis > 90 || scrollTop !== 0) {\r\n            return;\r\n          }\r\n          e.stopPropagation();\r\n          scrollContent.current.style.transform = `translateY(${dis}px)`;\r\n        }}\r\n        onTouchEnd={(e) => {\r\n          if (currentPos > 60) {\r\n            onRefresh(() => {\r\n              scrollContent.current.style.transform = `translateY(${0}px)`;\r\n            });\r\n          } else {\r\n            scrollContent.current.style.transition = '.2s'\r\n            setTimeout(() => {\r\n              scrollContent.current.style.transition = ''\r\n            }, 200)\r\n            scrollContent.current.style.transform = `translateY(${0}px)`;\r\n            currentPos = 0;\r\n          }\r\n        }}\r\n      >\r\n        <div style={{ lineHeight: '90px', marginTop: '-90px', height: '90px', background: 'red' }}>下拉刷新...</div>\r\n        {\r\n          data.map((item, index) => {\r\n            if (index >= start && index <= end) {\r\n              const Item = (\r\n                <div className='list-item' key={index}>\r\n                  {\r\n                    renderItem(item, index)\r\n                  }\r\n                </div>\r\n              );\r\n              return Item;\r\n            }\r\n            return null;\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List2;","D:\\github\\my\\f-test\\react-learn\\src\\lib\\MyRedux.ts",[],["187","188"],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestSetState\\index.js",[],["189","190"],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\LifeCycleTest\\index.js",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestHooks\\index.js",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestEvents\\index.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":2,"column":35,"nodeType":"197","messageId":"198","endLine":2,"endColumn":39},{"ruleId":"195","severity":1,"message":"199","line":8,"column":10,"nodeType":"197","messageId":"198","endLine":8,"endColumn":16},{"ruleId":"195","severity":1,"message":"200","line":8,"column":18,"nodeType":"197","messageId":"198","endLine":8,"endColumn":29},{"ruleId":"195","severity":1,"message":"201","line":8,"column":31,"nodeType":"197","messageId":"198","endLine":8,"endColumn":38},{"ruleId":"195","severity":1,"message":"202","line":9,"column":9,"nodeType":"197","messageId":"198","endLine":9,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":17,"column":6,"nodeType":"205","endLine":17,"endColumn":8,"suggestions":"206"},{"ruleId":"195","severity":1,"message":"207","line":4,"column":24,"nodeType":"197","messageId":"198","endLine":4,"endColumn":36},{"ruleId":"195","severity":1,"message":"208","line":7,"column":7,"nodeType":"197","messageId":"198","endLine":7,"endColumn":14},{"ruleId":"203","severity":1,"message":"209","line":25,"column":8,"nodeType":"205","endLine":25,"endColumn":10,"suggestions":"210"},{"ruleId":"195","severity":1,"message":"211","line":26,"column":11,"nodeType":"197","messageId":"198","endLine":26,"endColumn":25},{"ruleId":"212","severity":1,"message":"213","line":73,"column":47,"nodeType":"214","messageId":"215","endLine":73,"endColumn":49},{"ruleId":"195","severity":1,"message":"216","line":2,"column":17,"nodeType":"197","messageId":"198","endLine":2,"endColumn":26},{"ruleId":"195","severity":1,"message":"217","line":7,"column":28,"nodeType":"197","messageId":"198","endLine":7,"endColumn":35},{"ruleId":"191","replacedBy":"218"},{"ruleId":"193","replacedBy":"219"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Action' is defined but never used.","'createStore' is defined but never used.","'Reducer' is defined but never used.","'div2Ref' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'divRef', 'inputRef', and 'textAreaRef'. Either include them or remove the dependency array.","ArrayExpression",["222"],"'StyledBullet' is defined but never used.","'headUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'generateBullet'. Either include it or remove the dependency array.",["223"],"'getRangeRandom' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'useMemo' is defined but never used.",["220"],["221"],"no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [divRef, inputRef, textAreaRef]",{"range":"228","text":"229"},"Update the dependencies array to be: [generateBullet]",{"range":"230","text":"231"},[696,698],"[divRef, inputRef, textAreaRef]",[778,780],"[generateBullet]"]