[{"D:\\github\\my\\f-test\\react-learn\\src\\index.tsx":"1","D:\\github\\my\\f-test\\react-learn\\src\\reportWebVitals.ts":"2","D:\\github\\my\\f-test\\react-learn\\src\\App.tsx":"3","D:\\github\\my\\f-test\\react-learn\\src\\components\\NoMatch.tsx":"4","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestRedux\\index.tsx":"5","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\index.tsx":"6","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\index.tsx":"7","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\context.ts":"8","D:\\github\\my\\f-test\\react-learn\\src\\utils\\math.ts":"9","D:\\github\\my\\f-test\\react-learn\\src\\components\\ErrorBoundary.tsx":"10","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\ClassComponent.tsx":"11","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\FuncComponent.tsx":"12","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\EventTest.tsx":"13","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\ClassComponent3.tsx":"14","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\Modal.tsx":"15","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\HighOrderComponent.tsx":"16","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\RefTest.tsx":"17","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\TestRef.tsx":"18","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\NumberCom.tsx":"19","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\PureComponentTest.tsx":"20","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\RenderPropsTest.tsx":"21","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\OtherComponent.tsx":"22","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\TextInput.tsx":"23","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ToolBar.tsx":"24","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\UncontrolledCompTest.tsx":"25","D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\createPropsGetter.ts":"26","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ThemedButton2.tsx":"27","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ThemedButton.tsx":"28","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\Button.tsx":"29","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestBullets\\index.tsx":"30","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestList\\index.tsx":"31","D:\\github\\my\\f-test\\react-learn\\src\\components\\List.tsx":"32","D:\\github\\my\\f-test\\react-learn\\src\\pages\\Index.tsx":"33","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestList2\\index.tsx":"34","D:\\github\\my\\f-test\\react-learn\\src\\components\\List2.tsx":"35","D:\\github\\my\\f-test\\react-learn\\src\\lib\\MyRedux.ts":"36"},{"size":489,"mtime":1609172447206,"results":"37","hashOfConfig":"38"},{"size":425,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":1333,"mtime":1615098587749,"results":"40","hashOfConfig":"38"},{"size":111,"mtime":1609173309887,"results":"41","hashOfConfig":"38"},{"size":207,"mtime":1609561850737,"results":"42","hashOfConfig":"38"},{"size":1710,"mtime":1615414767622,"results":"43","hashOfConfig":"38"},{"size":3867,"mtime":1609484718451,"results":"44","hashOfConfig":"38"},{"size":628,"mtime":1609177139778,"results":"45","hashOfConfig":"38"},{"size":75,"mtime":1609167416685,"results":"46","hashOfConfig":"38"},{"size":775,"mtime":1609249248423,"results":"47","hashOfConfig":"38"},{"size":1222,"mtime":1609504256848,"results":"48","hashOfConfig":"38"},{"size":827,"mtime":1609502859824,"results":"49","hashOfConfig":"38"},{"size":839,"mtime":1609509406433,"results":"50","hashOfConfig":"38"},{"size":1051,"mtime":1609507107979,"results":"51","hashOfConfig":"38"},{"size":605,"mtime":1609474024217,"results":"52","hashOfConfig":"38"},{"size":473,"mtime":1609493050251,"results":"53","hashOfConfig":"38"},{"size":1072,"mtime":1609507608471,"results":"54","hashOfConfig":"38"},{"size":1002,"mtime":1609478862981,"results":"55","hashOfConfig":"38"},{"size":295,"mtime":1609259947199,"results":"56","hashOfConfig":"38"},{"size":1554,"mtime":1609262856670,"results":"57","hashOfConfig":"38"},{"size":1705,"mtime":1609480807891,"results":"58","hashOfConfig":"38"},{"size":236,"mtime":1609173915015,"results":"59","hashOfConfig":"38"},{"size":476,"mtime":1609254856161,"results":"60","hashOfConfig":"38"},{"size":291,"mtime":1609254555656,"results":"61","hashOfConfig":"38"},{"size":644,"mtime":1609484870053,"results":"62","hashOfConfig":"38"},{"size":314,"mtime":1609507061059,"results":"63","hashOfConfig":"38"},{"size":800,"mtime":1609177261661,"results":"64","hashOfConfig":"38"},{"size":926,"mtime":1609176557602,"results":"65","hashOfConfig":"38"},{"size":381,"mtime":1609473779874,"results":"66","hashOfConfig":"38"},{"size":2098,"mtime":1614727772191,"results":"67","hashOfConfig":"38"},{"size":700,"mtime":1615097430235,"results":"68","hashOfConfig":"38"},{"size":3003,"mtime":1615097335300,"results":"69","hashOfConfig":"38"},{"size":581,"mtime":1615098600173,"results":"70","hashOfConfig":"38"},{"size":932,"mtime":1615112460013,"results":"71","hashOfConfig":"38"},{"size":4158,"mtime":1615113089608,"results":"72","hashOfConfig":"38"},{"size":1385,"mtime":1615391391394,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"13gmpi1",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"D:\\github\\my\\f-test\\react-learn\\src\\index.tsx",[],["153","154"],"D:\\github\\my\\f-test\\react-learn\\src\\reportWebVitals.ts",[],"D:\\github\\my\\f-test\\react-learn\\src\\App.tsx",["155"],"import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport NoMatch from './components/NoMatch';\nimport './App.css'\n\nconst TestAdvacedGuides = lazy(() => import('./pages/TestAdvacedGuides'));\n\nconst Index = lazy(() => import('./pages/Index'));\nconst UseTS = lazy(() => import('./pages/UseTs'));\n\nconst TestRedux = lazy(() => import('./pages/TestRedux'));\n\nconst TestBullets = lazy(() => import('./pages/TestBullets'));\nconst TestList = lazy(() => import('./pages/TestList'));\nconst TestList2 = lazy(() => import('./pages/TestList2'));\n\n\nfunction App() {\n\n  return (\n    <React.Fragment>\n      <Router>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route exact path=\"/\" component={Index} />\n            <Route path=\"/TestAdvacedGuides\" component={TestAdvacedGuides} />\n            <Route path=\"/TestRedux\" component={TestRedux} />\n            <Route path=\"/UseTS\" component={UseTS} />\n            <Route path=\"/TestBullets\" component={TestBullets} />\n            <Route path=\"/TestList\" component={TestList} />\n            <Route path=\"/TestList2\" component={TestList2} />\n            <Route component={NoMatch} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","D:\\github\\my\\f-test\\react-learn\\src\\components\\NoMatch.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestRedux\\index.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\index.tsx",["156"],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\index.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\context.ts",[],"D:\\github\\my\\f-test\\react-learn\\src\\utils\\math.ts",[],"D:\\github\\my\\f-test\\react-learn\\src\\components\\ErrorBoundary.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\ClassComponent.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\FuncComponent.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\EventTest.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\ClassComponent3.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\Modal.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\HighOrderComponent.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\components\\RefTest.tsx",["157","158"],"import React, {useEffect, useRef } from 'react'\r\nimport ClassComponent3 from './ClassComponent3';\r\n\r\nconst RefTest: React.FC = () => {\r\n  const inputRef: React.RefObject<HTMLInputElement> = React.createRef();\r\n  const divRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n  // 这里有坑：useRef返回的类型是MutableRefObject<T | undefined>\r\n  // 而组件ref期望的是RefCallback<T> | RefObject<T> | null | string\r\n  const div2Ref = useRef<React.RefObject<HTMLDivElement>>();\r\n  const componentRef: React.RefObject<ClassComponent3> = React.createRef();\r\n\r\n  let textAreaRef: HTMLTextAreaElement | null;\r\n  useEffect(() => {\r\n    console.log(inputRef)\r\n    console.log(divRef);\r\n    console.log(textAreaRef);\r\n  }, []);\r\n  return (\r\n    <div ref={divRef}>\r\n      {/* 下面这行会报错 */}\r\n      {/* <div ref={div2Ref}>a</div> */}\r\n      <input ref={inputRef} />\r\n      <ClassComponent3 name=\"hello\" ref={componentRef} />\r\n      <textarea ref={(ref) => {\r\n        textAreaRef = ref;\r\n      }}></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RefTest;","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\TestRef.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\NumberCom.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\PureComponentTest.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\RenderPropsTest.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\OtherComponent.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\TextInput.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ToolBar.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\UncontrolledCompTest.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\UseTs\\createPropsGetter.ts",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ThemedButton2.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\ThemedButton.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestAdvacedGuides\\components\\Button.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestBullets\\index.tsx",["159","160","161","162"],"// @ts-nocheck\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport BulletScreen, { StyledBullet } from 'rc-bullets';\r\n\r\n// @ts-ignore\r\nconst headUrl = 'https://zerosoul.github.io/rc-bullets/assets/img/heads/girl.jpg';\r\nexport default function Demo() {\r\n    // 弹幕屏幕\r\n    const [screen, setScreen] = useState(null);\r\n    // 弹幕内容\r\n    const [bullet, setBullet] = useState('');\r\n    useEffect(() => {\r\n        // 给页面中某个元素初始化弹幕屏幕，一般为一个大区块。此处的配置项全局生效\r\n        let s = new BulletScreen('.screen', {\r\n            duration: 5,\r\n            trackHeight: 60,\r\n            pauseOnHover: false,\r\n            delay: '100ms'\r\n        });\r\n        // or\r\n        // let s=new BulletScreen(document.querySelector('.screen));\r\n        setScreen(s);\r\n        generateBullet(s);\r\n    }, []);\r\n    const getRangeRandom = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n    const generateBullet = (s) => {\r\n        s.push(<div>3333</div>)\r\n        setTimeout(() => {\r\n            generateBullet(s)\r\n        }, Math.floor(1000 * Math.random()) + 1000);\r\n    }\r\n    // 弹幕内容输入事件处理\r\n    const handleChange = ({ target: { value } }) => {\r\n        setBullet(value);\r\n    };\r\n    // 发送弹幕\r\n    const handleSend = () => {\r\n        if (bullet) {\r\n            // push 纯文本\r\n            // screen.push(bullet);\r\n            // or 使用 StyledBullet\r\n\r\n            screen.push(\r\n                <div>\r\n                    {bullet}\r\n                </div>\r\n            );\r\n            // or 还可以这样使用，效果等同使用 StyledBullet 组件\r\n            // screen.push({ msg: bullet, head: headUrl, color: \"#eee\" size=\"large\" backgroundColor: \"rgba(2,2,2,.3)\" })\r\n        }\r\n    };\r\n    return (\r\n        <main>\r\n            <div className=\"screen\" style={{ width: '100vw', height: '120px' }}></div>\r\n            <input value={bullet} onChange={handleChange} />\r\n            <button onClick={handleSend}>发送</button>\r\n        </main>\r\n    );\r\n}","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestList\\index.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\components\\List.tsx",["163"],"// @ts-nocheck\r\nimport React from 'react';\r\n\r\n\r\n// 应该接收的props: renderItem: Function<Promise>, getData:Function;  height:string; itemHeight: string\r\n\r\n// 下滑刷新组件\r\nclass InfiniteTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderItem = props.renderItem\r\n    this.getData = props.getData\r\n    this.state = {\r\n      loading: false,\r\n      page: 1,\r\n      showMsg: false,\r\n      List: [],\r\n      itemHeight: this.props.itemHeight || 0,\r\n      start: 0,\r\n      end: 0,\r\n      visibleCount: 0\r\n    }\r\n  }\r\n\r\n  onScroll() {\r\n    let { offsetHeight, scrollHeight, scrollTop } = this.refs.scrollWrapper;\r\n    let showOffset = scrollTop - (scrollTop % this.state.itemHeight)\r\n    const target = this.refs.scrollContent\r\n    target.style.WebkitTransform = `translate3d(0, ${showOffset}px, 0)`\r\n    this.setState({\r\n      start: Math.floor(scrollTop / this.state.itemHeight),\r\n      end: Math.floor(scrollTop / this.state.itemHeight + this.state.visibleCount + 1)\r\n    })\r\n    if (offsetHeight + scrollTop + 15 > scrollHeight) {\r\n      if (!this.state.showMsg) {\r\n        let page = this.state.page;\r\n        page++;\r\n        this.setState({\r\n          loading: true\r\n        })\r\n        this.getData(page).then(data => {\r\n          this.setState({\r\n            loading: false,\r\n            page: page,\r\n            List: data.concat(this.state.List),\r\n            showMsg: data && data.length > 0 ? false : true\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData(this.state.page).then(data => {\r\n      this.setState({\r\n        List: data\r\n      })\r\n      // 初始化列表以后，也需要初始化一些参数\r\n      requestAnimationFrame(() => {\r\n        let { offsetHeight } = this.refs.scrollWrapper;\r\n        let visibleCount = Math.ceil(offsetHeight / this.state.itemHeight)\r\n        let end = visibleCount + 1\r\n        this.setState({\r\n          end,\r\n          visibleCount\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { List, start, end, itemHeight } = this.state\r\n    const renderList = List.map((item, index) => {\r\n      if (index >= start && index <= end)\r\n        return (\r\n          this.renderItem(item, index)\r\n        )\r\n    });\r\n    return (\r\n      <div>\r\n        <div\r\n          ref=\"scrollWrapper\"\r\n          onScroll={this.onScroll.bind(this)}\r\n          style={{ height: this.props.height, overflow: 'scroll', position: 'relative' }}\r\n        >\r\n          <div style={{ height: `${renderList.length * itemHeight}px`, position: 'absolute', top: 0, right: 0, left: 0 }}>\r\n\r\n          </div>\r\n          <div ref=\"scrollContent\" style={{ position: 'relative', top: 0, right: 0, left: 0 }}>\r\n            {renderList}\r\n          </div>\r\n        </div>\r\n        {this.state.loading && (\r\n          <div>加载中</div>\r\n        )}\r\n        {this.state.showMsg && (\r\n          <div>暂无更多内容</div>\r\n        )}\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default InfiniteTwo;","D:\\github\\my\\f-test\\react-learn\\src\\pages\\Index.tsx",["164","165","166"],"// @ts-nocheck\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\r\n\r\nconst Index = () =>\r\n(\r\n  <>\r\n    <Link to=\"/\">首页</Link><br />\r\n    <Link to=\"/TestAdvacedGuides\">测试高级指引</Link><br />\r\n    <Link to=\"/TestRedux\">测试使用redux</Link><br />\r\n    <Link to=\"/UseTS\">测试使用TS</Link><br />\r\n    <Link to=\"/TestBullets\">测试使用TestBullets</Link><br />\r\n    <Link to=\"/TestList\">测试使用TestList</Link><br />\r\n    <Link to=\"/TestList2\">TestList2</Link><br />\r\n  </>\r\n)\r\n\r\nexport default Index;","D:\\github\\my\\f-test\\react-learn\\src\\pages\\TestList2\\index.tsx",[],"D:\\github\\my\\f-test\\react-learn\\src\\components\\List2.tsx",["167"],"// @ts-nocheck\r\n\r\n// https://www.cnblogs.com/songbw/p/11662783.html\r\n// https://www.jianshu.com/p/39404c94dbd0\r\n\r\n\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\r\n\r\nconst List2 = ({\r\n  renderItem,\r\n  height,\r\n  itemHeight,\r\n  data,\r\n  distance = 15,\r\n  onReachEnd = () => { },\r\n  onRefresh = (close) => {\r\n    console.log('onRefresh')\r\n    setTimeout(() => {\r\n      close();\r\n    }, 2000);\r\n  }\r\n}) => {\r\n  let currentPos = 0;\r\n  const scrollWrapper = useRef(null);\r\n  const scrollContent = useRef(null);\r\n  const [visibleCount, setVisibleCount] = useState(0);\r\n  const [start, setStart] = useState(0)\r\n  const [end, setEnd] = useState(0)\r\n  const [startY, setStatY] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setStart(0)\r\n    setVisibleCount(Math.ceil(height / itemHeight))\r\n    setEnd(Math.ceil(height / itemHeight))\r\n  }, [height, itemHeight])\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(entries => {\r\n      entries.forEach((item, index) => {\r\n        if (item.intersectionRatio > 0.7) {\r\n          console.log(item.target.firstElementChild?.innerHTML);\r\n          observer.unobserve(item.target)\r\n        }\r\n      });\r\n      console.log('-----------------')\r\n\r\n    }, {\r\n      threshold: [0.7]  // 只要展现面积达到 70% 的元素 \r\n    });\r\n\r\n    document.querySelectorAll('.list-item')\r\n      .forEach((item) => {\r\n        observer.observe(item)\r\n      });\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    }\r\n  })\r\n\r\n  const onScroll = () => {\r\n    const { offsetHeight, scrollTop, scrollHeight } = scrollWrapper.current;\r\n    let showOffset = scrollTop - (scrollTop % itemHeight);\r\n    scrollContent.current.style.WebkitTransform = `translate3d(0, ${showOffset}px, 0)`\r\n    setStart(Math.floor(scrollTop / itemHeight));\r\n    setEnd(Math.floor(scrollTop / itemHeight) + visibleCount + 1);\r\n\r\n    if (offsetHeight + scrollTop + distance > scrollHeight) {\r\n      onReachEnd();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      overflow: 'scroll',\r\n      position: 'relative',\r\n      top: 0,\r\n      left: 0,\r\n      height: height + 'px',\r\n    }} ref={scrollWrapper} onScroll={onScroll}>\r\n\r\n      <div style={{ position: 'absolute', top: 0, left: 0, right: 0, height: data.length * itemHeight + 'px' }}></div>\r\n      <div\r\n        style={{\r\n          willChange: 'transform',\r\n        }}\r\n        ref={scrollContent}\r\n        onTouchStart={(e) => {\r\n          console.log('start')\r\n          const { scrollTop } = scrollWrapper.current\r\n          if (scrollTop === 0) {\r\n            setStatY(e.touches[0].pageY);\r\n            e.stopPropagation();\r\n          }\r\n        }}\r\n        onTouchMove={(e) => {\r\n          const pageY = e.touches[0].pageY;\r\n          const dis = pageY - startY;\r\n          currentPos = dis;\r\n          const { scrollTop } = scrollWrapper.current\r\n          if (dis < 0 || dis > 90 || scrollTop !== 0) {\r\n            return;\r\n          }\r\n          e.stopPropagation();\r\n          scrollContent.current.style.transform = `translateY(${dis}px)`;\r\n        }}\r\n        onTouchEnd={(e) => {\r\n          if (currentPos > 60) {\r\n            onRefresh(() => {\r\n              scrollContent.current.style.transform = `translateY(${0}px)`;\r\n            });\r\n          } else {\r\n            scrollContent.current.style.transition = '.2s'\r\n            setTimeout(() => {\r\n              scrollContent.current.style.transition = ''\r\n            }, 200)\r\n            scrollContent.current.style.transform = `translateY(${0}px)`;\r\n            currentPos = 0;\r\n          }\r\n        }}\r\n      >\r\n        <div style={{ lineHeight: '90px', marginTop: '-90px', height: '90px', background: 'red' }}>下拉刷新...</div>\r\n        {\r\n          data.map((item, index) => {\r\n            if (index >= start && index <= end) {\r\n              const Item = (\r\n                <div className='list-item' key={index}>\r\n                  {\r\n                    renderItem(item, index)\r\n                  }\r\n                </div>\r\n              );\r\n              return Item;\r\n            }\r\n            return null;\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List2;","D:\\github\\my\\f-test\\react-learn\\src\\lib\\MyRedux.ts",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":2,"column":35,"nodeType":"174","messageId":"175","endLine":2,"endColumn":39},{"ruleId":"172","severity":1,"message":"176","line":8,"column":10,"nodeType":"174","messageId":"175","endLine":8,"endColumn":16},{"ruleId":"172","severity":1,"message":"177","line":9,"column":9,"nodeType":"174","messageId":"175","endLine":9,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":17,"column":6,"nodeType":"180","endLine":17,"endColumn":8,"suggestions":"181"},{"ruleId":"172","severity":1,"message":"182","line":4,"column":24,"nodeType":"174","messageId":"175","endLine":4,"endColumn":36},{"ruleId":"172","severity":1,"message":"183","line":7,"column":7,"nodeType":"174","messageId":"175","endLine":7,"endColumn":14},{"ruleId":"178","severity":1,"message":"184","line":25,"column":8,"nodeType":"180","endLine":25,"endColumn":10,"suggestions":"185"},{"ruleId":"172","severity":1,"message":"186","line":26,"column":11,"nodeType":"174","messageId":"175","endLine":26,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":73,"column":47,"nodeType":"189","messageId":"190","endLine":73,"endColumn":49},{"ruleId":"172","severity":1,"message":"191","line":3,"column":27,"nodeType":"174","messageId":"175","endLine":3,"endColumn":33},{"ruleId":"172","severity":1,"message":"192","line":3,"column":41,"nodeType":"174","messageId":"175","endLine":3,"endColumn":46},{"ruleId":"172","severity":1,"message":"193","line":3,"column":48,"nodeType":"174","messageId":"175","endLine":3,"endColumn":54},{"ruleId":"172","severity":1,"message":"194","line":7,"column":28,"nodeType":"174","messageId":"175","endLine":7,"endColumn":35},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Action' is defined but never used.","'div2Ref' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'divRef', 'inputRef', and 'textAreaRef'. Either include them or remove the dependency array.","ArrayExpression",["197"],"'StyledBullet' is defined but never used.","'headUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'generateBullet'. Either include it or remove the dependency array.",["198"],"'getRangeRandom' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'useMemo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [divRef, inputRef, textAreaRef]",{"range":"203","text":"204"},"Update the dependencies array to be: [generateBullet]",{"range":"205","text":"206"},[696,698],"[divRef, inputRef, textAreaRef]",[778,780],"[generateBullet]"]